1 DISPLAY FIRST_NAME , DEPARTMENT_NAME
--> SELECT FIRST_NAME , DEPARTMENT_NAME FROM EMPLOYEES
	INNER JOIN DEPARTMENTS USING(DEPARTMENT_ID);

2 DISPLAY FIRST_NAME AND HIS/HER DEPARTMENTAL COLLEGUE NAME (REMOVE ALL TYPES OF DUPLICATIONS)
-->SELECT E.FIRST_NAME,C.FIRST_NAME
      FROM EMPLOYEES E
      JOIN EMPLOYEES C ON E.DEPARTMENT_ID = C.DEPARTMENT_ID
    WHERE E.EMPLOYEE_ID > C.EMPLOYEE_ID ;

3 DISPLAY FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME
--> SELECT FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME FROM EMPLOYEES
	INNER JOIN DEPARTMENTS USING(DEPARTMENT_ID)
	INNER JOIN LOCATIONS USING(LOCATION_ID)
		JOIN COUNTRIES USING(COUNTRY_ID)
		JOIN REGIONS USING(REGION_ID);

4 DISPLAY DEPARTMENT_NAME , CITY
--> SELECT DEPARTMENT_NAME , CITY FROM DEPARTMENTS 
	JOIN LOCATIONS  USING(LOCATION_ID);

5 DISPLAY FIRST_NAME , JOB_ID , JOB_TITLE
--> SELECT FIRST_NAME , JOB_ID , JOB_TITLE FROM EMPLOYEES
	JOIN JOBS USING(JOB_ID);

6 DISPLAY DEPARTMENT_NAME , CITY, STATE_PROVINCE, COUNTRY_NAME
--> SELECT DEPARTMENT_NAME , CITY, STATE_PROVINCE , COUNTRY_NAME FROM DEPARTMENTS 
	JOIN LOCATIONS USING(LOCATION_ID)
	JOIN COUNTRIES USING(COUNTRY_ID);

7 DISPLAY FIRST_NAME , REGION_NAME
--> SELECT FIRST_NAME , REGION_NAME FROM EMPLOYEES 
	JOIN DEPARTMENTS USING(DEPARTMENT_ID)
	JOIN LOCATIONS USING(LOCATION_ID)
	JOIN COUNTRIES USING(COUNTRY_ID)
	JOIN REGIONS USING(REGION_ID);

8 DISPLAY DEPARTMENT_NAME , REGION_NAME
--> SELECT DEPARTMENT_NAME , REGION_NAME FROM DEPARTMENTS
	JOIN LOCATIONS USING(LOCATION_ID)
	JOIN COUNTRIES USING(COUNTRY_ID)
	JOIN REGIONS USING(REGION_ID);

9 DISPLAY THOSE REGION_NAME IN WHICH NO LOCATION IS YET FIXED
--> SELECT REGION_NAME FROM REGIONS
     LEFT OUTER JOIN COUNTRIES USING(REGION_ID) WHERE COUNTRY_ID IS NULL;

10 DISPLAY FIRST_NAME , SALARY , GRADE_LEVEL
--> SELECT FIRST_NAME , SALARY , GRADE_LEVEL FROM EMPLOYEES E
	JOIN JOB_GRADES ON E.SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL; 

11 DISPLAY FISELECT E.FIRST_NAME,M.FIRST_NAME, E.SALARY EMP_SAL, M.SALARY MGR_COLL_SAL,  E.SALARY - M.SALARY
     FROM EMPLOYEES E
     JOIN EMPLOYEES M ON E.MANAGER_ID = M.MANAGER_ID
WHERE E.EMPLOYEE_ID > M.EMPLOYEE_ID;SELECT E.FIRST_NAME , SALARY , M.FIRST_NAME FROM EMPLOYEES E
	JOIN EMPLOYEES M ON M.MANAGER_ID = E.MANAGER_ID
	;

12 DISPLAY ALL COMBINATIONS OF CITY AND COUNTRY_NAME

13 DISPLAY ALL COMBINATIONS DEPARTMENT_NAME AND CITY

14 DISPLAY FIRST_NAME , SALARY , GRADE_LEVEL

15 DISPLAY FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME

16 DISPLAY EMPLOYEE_NAME AND HIS MANAGER_NAME

17 DISPLAY COUNTRY_NAME , DEPARTMENT_ANME , REGION_NAME , CITY

18 DISPLAY EMPLOYEE_NAME , SALARY AND HIS/HER MANAGER'S NAME AND SALARY

19 DISPLAY CITY , REGION_NAME
 
20 DISPLAY EMPLOYEE NAME , JOB_TITLE AND HIS/HER MANAGER'S NAME AND JOB_TITLE

21 DISPLAY FIRST_NAME WHOSE DEPARTMENT_ID IS NOT FIXED YET

22 DISPLAY DEPARTMENT_NAME , REGION_NAME
 
23 DISPLAY FIRST_NAME , JOB_TITLE , SALARY , GRADE_LEVEL , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME

24 DISPLAY THOSE WHO GETS HIGHER SALARY THAN 'Abel'
 
25 DISPLAY FIRST_NAME , COUNTRY_NAME

26 DISPLAY THOSE WHO WERE HIRED BEFORE 'Hartstein'

27 DISPLAY FIRST_NAME , DEPARTMENT_NAME , CITY

28 DISPLAY EMPLOYEE_NAME , SALARY , GRADE_LEVEL AND HIS/HER MANAGER'S NAME , SALARY , GRADE_LEVEL

29 DISPLAY DEPARTMENT_NAME IN WHICH NO ONE IS HIRED

30 DISPLAY FIRST_NAME , CITY
