1 DISPLAY THOSE EMPLOYEES WHO GETS HIGHER SALARY THAN ALL EMPLOYEES OF DEPARTMENT 50
--> SELECT FIRST_NAME , SALARY , DEPARTMENT_ID FROM EMPLOYEES WHERE SALARY > (SELECT MAX(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID = 50);

2 DISPLAY ALL EMPLOYEES WHO WERE HIRED BEFORE Diana
--> SELECT FIRST_NAME , HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE < (SELECT HIRE_DATE FROM EMPLOYEES WHERE FIRST_NAME = 'Diana');

3 DISPLAY THOSE EMPLOYEES WHO WORKS IN Executive DEPARTMENT
--> SELECT FIRST_NAME , DEPARTMENT_ID  FROM EMPLOYEES WHERE  DEPARTMENT_ID  = (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Executive');

4 DISPLAY THOSE WHO WORKS IN Toronto CITY
--> SELECT FIRST_NAME FROM EMPLOYEES WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE LOCATION_ID = (SELECT LOCATION_ID FROM LOCATIONS WHERE CITY = 'Toronto'));

5 DISPLAY THOSE WHO GETS LOWEST SALARY IN THEIR DEPARTMENT
-->SELECT FIRST_NAME , SALARY FROM EMPLOYEES WHERE (SALARY,DEPARTMENT_ID) =ANY (SELECT MIN(SALARY) , DEPARTMENT_ID FROM EMPLOYEES GROUP BY DEPARTMENT_ID); 

6 DISPLAY THOSE WHO GET HIGHEST SALARY FOR THEIR JOB_ID
--> SELECT FIRST_NAME , SALARY , JOB_ID FROM EMPLOYEES WHERE (SALARY,JOB_ID) =ANY (SELECT MAX(SALARY), JOB_ID FROM EMPLOYEES GROUP BY JOB_ID);

7 DISPLAY THOSE WHO GETS LOWEST SALARY FOR THEIR MANAGER
--> SELECT FIRST_NAME , SALARY , MANAGER_ID FROM EMPLOYEES WHERE (SALARY , MANAGER_ID) =ANY (SELECT MAX(SALARY) , MANAGER_ID FROM EMPLOYEES GROUP BY MANAGER_ID);

8 DISPLAY THOSE WHO GETS HIGHEST SALARY FOR THEIR HIRE YEAR
--> SELECT FIRST_NAME , SALARY , HIRE_DATE FROM EMPLOYEES WHERE (SALARY,TO_CHAR(HIRE_DATE,'RRRR')) =ANY (SELECSS MAX(SALARY) , TO_CHAR(HIRE_DATE,'RRRR') FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'RRRR'));

9 DISPLAY FIRST_NAME AND SALARY FOR THE EMPLOYEES WHO GETS HIGHEST SALARY QUARTER WISE (IGNORE YEAR)
--> SELECT FIRST_NAME , SALARY , TO_CHAR(HIRE_DATE,'Q') FROM EMPLOYEES WHERE (SALARY,TO_CHAR(HIRE_DATE,'Q')) =ANY (SELECT MAX(SALARY) , TO_CHAR(HIRE_DATE,'Q') FROM EMPLOYEES GROUP BY            TO_CHAR(HIRE_DATE,'Q')) 
    ORDER BY 3;

10 DISPLAY FIRST_NAME FOR THE EMPLOYEES WHO WORKS IN United States of America
--> SELECT FIRST_NAME FROM EMPLOYEES WHERE DEPARTMENT_ID =ANY (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE LOCATION_ID =ANY
    (SELECT LOCATION_ID FROM LOCATIONS WHERE 
	COUNTRY_ID =ANY (SELECT COUNTRY_ID FROM COUNTRIES WHERE COUNTRY_NAME = 'United States of America')));

11 DISPLAY LAST_NAME FOR THE EMPLOYEES WHO WORKS IN Europe
--> SELECT LAST_NAME FROM EMPLOYEES WHERE DEPARTMENT_ID =ANY (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE LOCATION_ID =ANY
	(SELECT LOCATION_ID FROM LOCATIONS WHERE COUNTRY_ID =ANY
    (SELECT COUNTRY_ID FROM COUNTRIES WHERE REGION_ID =ANY (SELECT REGION_ID FROM REGIONS WHERE REGION_NAME = 'Europe'))));

12 DISPLAY FIRST_NAME , JOB_ID FOR THE EMPLOYEES WHO WORKS AS Programmer
--> SELECT FIRST_NAME , JOB_ID FROM EMPLOYEES WHERE JOB_ID = (SELECT JOB_ID FROM JOBS WHERE JOB_TITLE  = 'Programmer');

13 DISPLAY DEPARTMENT_NAME WHICH IS LOCATED IN Canada
--> SELECT DEPARTMENT_NAME FROM DEPARTMENTS WHERE LOCATION_ID =ANY (SELECT LOCATION_ID FROM LOCATIONS WHERE COUNTRY_ID 
    =ANY(SELECT COUNTRY_ID FROM COUNTRIES WHERE COUNTRY_NAME = 'Canada'));

14 DISPLAY CITY WHICH IS LOCATED IN Europe
--> SELECT CITY FROM LOCATIONS WHERE COUNTRY_ID =ANY (SELECT COUNTRY_ID FROM COUNTRIES WHERE REGION_ID
    =ANY (SELECT REGION_ID FROM REGIONS WHERE REGION_NAME = 'Europe'));

15 DISPLAY THOSE WHO REPORTS TO ANY MANAGER (19 ROWS)
--> SELECT FIRST_NAME FROM EMPLOYEES WHERE MANAGER_ID =ANY (SELECT MANAGER_ID FROM EMPLOYEES WHERE MANAGER_ID IS NOT NULL);

16 DISPLAY THOSE WHO REPORTS TO ANY DEPARTMENT HEAD (16 ROWS)
-->  SELECT FIRST_NAME FROM EMPLOYEES WHERE MANAGER_ID =ANY (SELECT MANAGER_ID FROM DEPARTMENTS WHERE MANAGER_ID IS NOT NULL);

17 DISPLAY THOSE WHO REPORTS TO HIS DEPARTMENT'S HEAD (12 ROWS)
--> SELECT FIRST_NAME FROM EMPLOYEES WHERE (MANAGER_ID,DEPARTMENT_ID) =ANY(SELECT MANAGER_ID,DEPARTMENT_ID FROM DEPARTMENTS); 

18 DISPLAY THOSE EMPLOYEES WHO GETS SALARY IN THE RANGE BETWEEN Shelley and Jennifer.
--> SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY BETWEEN (SELECT MIN(SALARY) FROM EMPLOYEES WHERE FIRST_NAME =ANY ('Shelley' , 'Jennifer'))AND
     (SELECT MAX(SALARY) FROM EMPLOYEES WHERE FIRST_NAME =ANY ('Shelley' , 'Jennifer'));

19 DISPLAY THOSE WHO WERE JOINED BETWEEN Kimerely and Shelley. (INCLUDING BOTH)
--> SELECT FIRST_NAME FROM EMPLOYEES WHERE HIRE_DATE BETWEEN (SELECT MIN(HIRE_DATE) FROM EMPLOYEES WHERE FIRST_NAME =ANY ('Kimerely' , 'Shelley'))AND
     (SELECT MAX(HIRE_DATE) FROM EMPLOYEES WHERE FIRST_NAME =ANY ('Kimerely' , 'Shelley'));

20 DISPLAY ALL OTHER THAN THOSE WHO GETS SALARY IN THE SALARY RANGE OF Shelley and Kimerely. (LEAST, GREATEST)
--> SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY NOT BETWEEN (SELECT MIN(SALARY) FROM EMPLOYEES WHERE FIRST_NAME =ANY ('Kimerely' , 'Shelley'))AND
     (SELECT MAX(SALARY) FROM EMPLOYEES WHERE FIRST_NAME =ANY ('Kimerely' , 'Shelley'));

21 DISPLAY ALL WHO GETS SALARY IN GRADE_LEVEL D.
--> SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY BETWEEN (SELECT LOWEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'D') AND 
(SELECT HIGHEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'D');

22 DISPLAY ALL WHO GETS SALARY IN THE RANGE OF Sales Manager.
--> SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY BETWEEN (SELECT MIN_SALARY FROM JOBS WHERE JOB_TITLE = 'Sales Manager') AND
(SELECT MAX_SALARY FROM JOBS WHERE JOB_TITLE = 'Sales Manager');

23 DISPLAY ALL OTHER THAN THOSE WHO GETS SALARY IN GRADE_LEVEL C AND E.
-->  SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY NOT BETWEEN (SELECT LOWEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'C') AND 
(SELECT HIGHEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'C') AND 
     SALARY NOT BETWEEN (SELECT LOWEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'E') AND 
(SELECT HIGHEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'E') ORDER BY SALARY;

24 DISPLAY ALL OTHER THAN THOSE WHO GETS SALARY OUTSIDE RANGE OF Programmer.
--> SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY NOT BETWEEN (SELECT MIN_SALARY FROM JOBS WHERE JOB_TITLE = 'Programmer') AND
(SELECT MAX_SALARY FROM JOBS WHERE JOB_TITLE = 'Programmer') ORDER BY SALARY;


25 DISPLAY ALL WHO GETS SALARY IN THE RANGE OF Sales Representative BUT NOT IN THE RANGE OF Accounting Manager.
--> SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY BETWEEN (SELECT MIN_SALARY FROM JOBS WHERE JOB_TITLE = 'Sales Manager') AND
(SELECT MAX_SALARY FROM JOBS WHERE JOB_TITLE = 'Sales Manager') AND
    SALARY NOT BETWEEN (SELECT MIN_SALARY FROM JOBS WHERE JOB_TITLE = 'Accounting Manager') AND
(SELECT MAX_SALARY FROM JOBS WHERE JOB_TITLE = 'Accounting Manager');
